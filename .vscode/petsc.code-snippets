{
	"petsc": {
		"prefix": "petsc_program",
		"body": [
			"static char help[] = \"${1:Program description}\\n\";",
			"",
			"#include <petsc.h>",
			"",
			"",
			"typedef struct {",
			"    $2",
			"} AppCtx;",
			"",
			"",
			"int main(int argc, char **argv)",
			"{",
			"    /*petsc objects*/",
			"    AppCtx           user;",
			"    ",
			"    /*initialize*/",
			"    PetscErrorCode ierr; ",
			"    ierr = PetscInitialize(&argc, &argv, NULL, help); CHKERRQ(ierr);",
			"",
			"    ",
			"",
			"",
			"    /*destroy*/",
			"",
			"    return PetscFinalize();",
			"}",
			"",
			"",
			"",
			""
		],
		"description": "petsc"
	},

	"DMDA1d": {
		"prefix": "DMDA1d",
		"body": [
			"ierr = DMDACreate1d(PETSC_COMM_WORLD, DM_BOUNDARY_NONE, ${1:M}, ${2:ndofs}, 1, NULL, &da); CHKERRQ(ierr);",
			"ierr = DMSetFromOptions(da); CHKERRQ(ierr);",
			"ierr = DMSetUp(da); CHKERRQ(ierr);",
			"ierr = DMDASetUniformCoordinates(da, ${3:xmin}, ${4:xmax}, ${5:ymin}, ${6:ymax}, ${7:zmin}, ${8:zmax}); CHKERRQ(ierr);",
			"ierr = DMDASetFieldName(da, 0, ${9:add_fieldname}); CHKERRQ(ierr);",
			"",
			""
		],
		"description": "DMDA1d"
	},

	"DMDA2d": {
		"prefix": "DMDA2d",
		"body": [
			"/*Create 2d distributed structured grid*/",
			"ierr = DMDACreate2d(PETSC_COMM_WORLD, DM_BOUNDARY_NONE, DM_BOUNDARY_NONE, DMDA_STENCIL_STAR, ${1:M}, ${2:N}, PETSC_DECIDE, PETSC_DECIDE, ${3:ndofs}, 1, NULL, NULL, &da); CHKERRQ(ierr);",
			"ierr = DMSetFromOptions(da); CHKERRQ(ierr);",
			"ierr = DMSetUp(da); CHKERRQ(ierr);",
			"ierr = DMDASetUniformCoordinates(da, ${4:xmin}, ${5:xmax}, ${6:ymin}, ${7:ymax}, ${8:zmin}, ${9:zmax}); CHKERRQ(ierr);",
			"ierr = DMDASetFieldName(da, 0, ${10:add_fieldname}); CHKERRQ(ierr);",
			"",
			""
		],
		"description": "DMDA2d"
	},
	"DMDA3d": {
		"prefix": "DMDA3d",
		"body": [
			"/*Create 3d distributed structured grid*/",
			"ierr = DMDACreate3d(PETSC_COMM_WORLD, DM_BOUNDARY_NONE, DM_BOUNDARY_NONE, DM_BOUNDARY_NONE, DMDA_STENCIL_STAR, ${1:M}, ${2:N}, ${3:P}, PETSC_DECIDE, PETSC_DECIDE, PETSC_DECIDE, ${4:ndofs}, 1, NULL, NULL, NULL, &da); CHKERRQ(ierr);",
			"ierr = DMSetFromOptions(da); CHKERRQ(ierr);",
			"ierr = DMSetUp(da); CHKERRQ(ierr);",
			"ierr = DMDASetUniformCoordinates(da, ${5:xmin}, ${6:xmax}, ${7:ymin}, ${8:ymax}, ${9:zmin}, ${10:zmax}); CHKERRQ(ierr);",
			"ierr = DMDASetFieldName(da, 0, ${11:add_fieldname}); CHKERRQ(ierr);",
			"",
			""
		],
		"description": "DMDA3d"
	},

	"KSP": {
		"prefix": "KSP",
		"body": [
		  "/*create ksp and solve Ax = b*/",
		  "ierr = KSPCreate(PETSC_COMM_WORLD, &ksp); CHKERRQ(ierr);",
		  "ierr = KSPSetDM(ksp, da); CHKERRQ(ierr);",
		  "ierr = KSPSetComputeRHS(ksp, ${1:func}, &user); CHKERRQ(ierr);",
		  "ierr = KSPSetComputeOperators(ksp, ${2:func}, &user); CHKERRQ(ierr);",
		  "ierr = KSPSetFromOptions(ksp); CHKERRQ(ierr);",
		  "ierr = KSPSetUp(ksp); CHKERRQ(ierr);",
		  "ierr = KSPSolve(ksp, NULL, NULL); CHKERRQ(ierr);"
		],
		"description": "KSP"
	  },
}